{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Getting Started",
  "steps": [
    {
      "title": "Introduction",
      "description": "ComponentDetection is a command line package scanning tool. It produces a graph-based output of all detected components and supports a variety of open source package ecosystems. Let's take a look at how to run it."
    },
    {
      "file": ".vscode/launch.json",
      "description": "These are some the basic arguments necessary for the tool to run. The most important of which are:\n\n* `scan` - the action we want to take\n* `SourceDirectory` - the root directory where we want the recursive scan to start\n\nFor a full breakdown of the arguments available check out [./docs/detector-arguments.md](./docs/detector-arguments.md)\n\nYou can run ComponentDetection with these default arguments using the shortcut `Ctrl`+`Shift`+`B`\n\n[Build](command:workbench.action.tasks.build)",
      "line": 15,
      "title": "Command Line Arguments"
    },
    {
      "title": "Concepts",
      "description": "At a high level:\n\n* `ComponentDetection` starts from a `SourceDirectory` and iterates recursively through the files and directories\n* A `Detector` can specify a list of patterns which it's interested in\n* If a file name matches a pattern, the file contents are read and sent to the `Detector`\n* A `Detector` is responsible for producing a graph of `Components` as the output from processing a file\n* Once all files have been read and processed, `ComponentDetection` accumulates all of the graphs into a final output manifest"
    },
    {
      "directory": "src/Detectors",
      "description": "There are many detectors, at least 1 for each package ecosystem. Let's take a look at a simple example.",
      "title": "Detectors Folder"
    },
    {
      "file": "src/Detectors/cocoapods/PodComponentDetector.cs",
      "description": "Here is an example of a `Detector` for cocoapods components",
      "line": 15,
      "title": "Detector Class"
    },
    {
      "file": "src/Detectors/cocoapods/PodComponentDetector.cs",
      "description": "These are the file patterns which the `Detector` is interested in",
      "line": 21,
      "title": "Search Patterns"
    },
    {
      "file": "src/Detectors/cocoapods/PodComponentDetector.cs",
      "description": "Here is where we register a detected `PodComponent` in the output graph for this file.",
      "line": 330,
      "title": "Registering Components"
    },
    {
      "directory": "src/Contracts/TypedComponent",
      "description": "There are many component types, one for each package ecosystem. That allows us to keep only the information relavant for each ecosystem.",
      "title": "TypedComponents Folder"
    },
    {
      "title": "Wrap Up",
      "description": "Run ComponentDetection (remember: `Ctrl`+`Shift`+`B`) and take a look at the final output in `./scan-output/bcde-output.json`."
    }
  ],
  "isPrimary": true
}